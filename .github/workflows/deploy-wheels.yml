name: Deploy wheels

on:
  push:
    branches:
      - main
  release:
    types:
      - published
jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macOS-latest, ubuntu-latest]
        python-version: ["3.6", "3.7", "3.8", "3.9", "3.10-dev"]
        include:
          # Add version-tag variable to existing jobs. Only used for Linux.
          - { python-version: "3.6", version-tag: "cp36-cp36m" }
          - { python-version: "3.7", version-tag: "cp37-cp37m" }
          - { python-version: "3.8", version-tag: "cp38-cp38" }
          - { python-version: "3.9", version-tag: "cp39-cp39" }
          - { python-version: "3.10-dev", version-tag: "cp310-cp310" }

    steps:
    - uses: actions/checkout@v2
    - run: |
        git fetch --prune --unshallow

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade -q pip pytest wheel setuptools twine

    - name: Test with pytest
      if: matrix.os != 'ubuntu-latest'
      run: |
        pip install .
        pytest

    - name: Build macOS/Windows wheel
      if: matrix.os != 'ubuntu-latest'
      run: python setup.py -q bdist_wheel

    - name: Docker Buildx
      if: matrix.os == 'ubuntu-latest'
      id: buildx
      uses: crazy-max/ghaction-docker-buildx@v3.3.0
      with:
        buildx-version: latest
        qemu-version: latest

    - name: Build x86_64 Linux wheels
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.9'
      # Build all at once
      run: |
        docker run -v `pwd`:/io quay.io/pypa/manylinux2014_x86_64 /io/scripts/build-manylinux-wheels.sh

    - name: Build i686 Linux wheels
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.9'
      # Build all at once
      run: |
        docker run -v `pwd`:/io quay.io/pypa/manylinux2014_i686 /io/scripts/build-manylinux-wheels.sh

    - name: Build aarch64 Linux wheels
      if: matrix.os == 'ubuntu-latest'
      # aarch64 building is slow, let's pass version-tag to build each Python version in parallel
      run: |
        docker run -v `pwd`:/io quay.io/pypa/manylinux2014_aarch64 /io/scripts/build-manylinux-wheels.sh ${{ matrix.version-tag }}

    - name: Upload as build artifacts
      uses: actions/upload-artifact@v2
      with:
        name: wheels
        path: dist/*.whl

    - name: Publish package to PyPI
      if: github.event.action == 'published'
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.pypi_password }}
      run: twine upload --skip-existing dist/*.whl

    - name: Publish package to TestPyPI
      if: github.repository == 'ultrajson/ultrajson'
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.test_pypi_password }}
      run: |
        twine upload --repository-url https://test.pypi.org/legacy/ --skip-existing dist/*.whl
